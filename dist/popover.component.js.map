{"version":3,"file":"popover.component.js","sourceRoot":"","sources":["../src/popover.component.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACtD,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AACzC,OAAO,aAAa,MAAM,kBAAkB,CAAC;AAC7C,OAAO,QAAQ,MAAM,oBAAoB,CAAC;AAM1C,IAAa,OAAO,GAApB,MAAa,OAAQ,SAAQ,IAAI;IAO/B;QACE,KAAK,EAAE,CAAC;QALoB,SAAI,GAAG,KAAK,CAAC;QACb,aAAQ,GAAG,KAAK,CAAC;IAK/C,CAAC;IAED,YAAY;QACV,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SAC1E;IACH,CAAC;IAES,oBAAoB,CAAC,CAAM;QACnC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAO,EAAE,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;YAChF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,SAAS,GAAG,IAAI,WAAW,CAAC,MAAM,EAAE;gBACtC,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;SAC/B;aACI;YACH,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;SACnB;IACH,CAAC;IAES,mBAAmB,CAAC,CAAQ,IAAG,CAAC;IAEhC,WAAW,CAAC,CAAM;QAC1B,IAAI,YAAY,GAAG,IAAI,WAAW,CAAC,SAAS,EAAE;YAC5C,MAAM,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,aAAa,EAAE;YACnC,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC;IAES,MAAM;QACd,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;CACF,CAAA;AA5Ce,uBAAe,GAAG,CAAC,aAAa,CAAC,CAAC;AAElB;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;qCAAc;AACb;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;yCAAkB;AAJpC,OAAO;IADnB,aAAa,CAAC,YAAY,CAAC;;GACf,OAAO,CA6CnB;SA7CY,OAAO","sourcesContent":["import { customElement, property } from 'lit-element';\r\nimport { Base } from '@spectrum/sp-base';\r\nimport popoverStyles from './popover.styles';\r\nimport template from './popover.template';\r\n\r\nexport type MenuElement = { id: String, text: String, role: String, disabled: Boolean };\r\nexport type NestableMenuElement = MenuElement | { [k: string]: MenuElement };\r\n\r\n@customElement('sp-popover')\r\nexport class Popover extends Base {\r\n  public static componentStyles = [popoverStyles];\r\n\r\n   @property({ type: Boolean }) open = false;\r\n   @property({ type: Boolean }) disabled = false;\r\n\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  firstUpdated() {\r\n    if (!this.disabled) {\r\n      document.addEventListener('click', this._handleDocumentClick.bind(this));\r\n    }\r\n  }\r\n\r\n  protected _handleDocumentClick(e: any) {\r\n    if ((!this.open) && e.path.some((el: any) => el === this) && (this != e.path[0])) {\r\n      this.open = true;\r\n      let openEvent = new CustomEvent('open', {\r\n        bubbles: true,\r\n        composed: true\r\n      });\r\n      this.dispatchEvent(openEvent);\r\n    }\r\n    else {\r\n      this.open = false;\r\n    }\r\n  }\r\n\r\n  protected handleDisabledClick(e: Event) {}\r\n\r\n  protected handleClick(e: any) {\r\n    let changedEvent = new CustomEvent('changed', {\r\n      detail: { target: e.currentTarget },\r\n      bubbles: true,\r\n      composed: true\r\n    });\r\n    this.dispatchEvent(changedEvent);\r\n  }\r\n\r\n  protected render() {\r\n    return template.call(this);\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'sp-popover': Popover;\r\n  }\r\n}\r\n"]}